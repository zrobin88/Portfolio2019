{"ast":null,"code":"var _jsxFileName = \"/Users/zacharyrobin/Desktop/Code/new-pf/src/components/jumbotron.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport { thisExpression } from '@babel/types';\n\nclass Jumbotron extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: ['The A-List', 'Season Display', 'Image Search'],\n      description: [],\n      appLink: [],\n      ghLink: [],\n      currentIndex: 0\n    };\n\n    this.goToPrev = () => {};\n\n    this.goToNext = () => {\n      console.log('clicked');\n\n      for (let i = 0; i < this.state.title.length; i++) {\n        if (this.state.currentIndex < this.state.title.length) {\n          this.setState({\n            currentIndex: [0]\n          });\n        }\n      }\n\n      this.setState({\n        currentIndex: this.state.currentIndex + 1\n      });\n      console.log(this.state.currentIndex);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      title: this.state.currentIndex,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.title[this.state.currentIndex]), React.createElement(\"p\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.\"), React.createElement(\"hr\", {\n      className: \"my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Check it out for yourself!\"), React.createElement(\"a\", {\n      className: \"btn btn-primary btn-lg appLink\",\n      href: \"github.com\",\n      role: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Learn more\"), React.createElement(\"a\", {\n      className: \"btn btn-primary btn-lg ghLink\",\n      href: \"github.com\",\n      role: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Learn more\")), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: this.goToPrev,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Previous\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: this.goToNext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Next\"));\n  }\n\n}\n\nexport default Jumbotron;","map":{"version":3,"sources":["/Users/zacharyrobin/Desktop/Code/new-pf/src/components/jumbotron.js"],"names":["React","Component","thisExpression","Jumbotron","state","title","description","appLink","ghLink","currentIndex","goToPrev","goToNext","console","log","i","length","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAGA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BG,KAF8B,GAEtB;AACJC,MAAAA,KAAK,EAAE,CAAC,YAAD,EAAe,gBAAf,EAAiC,cAAjC,CADH;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,OAAO,EAAE,EAHL;AAIJC,MAAAA,MAAM,EAAE,EAJJ;AAKJC,MAAAA,YAAY,EAAE;AALV,KAFsB;;AAAA,SAU9BC,QAV8B,GAUnB,MAAM,CAEhB,CAZ6B;;AAAA,SAc9BC,QAd8B,GAcnB,MAAM;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKV,KAAL,CAAWC,KAAX,CAAiBU,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAC9C,YAAG,KAAKV,KAAL,CAAWK,YAAX,GAA0B,KAAKL,KAAL,CAAWC,KAAX,CAAiBU,MAA9C,EAAqD;AACjD,eAAKC,QAAL,CAAc;AAACP,YAAAA,YAAY,EAAE,CAAC,CAAD;AAAf,WAAd;AACH;AAEJ;;AACD,WAAKO,QAAL,CAAc;AACXP,QAAAA,YAAY,EAAE,KAAKL,KAAL,CAAWK,YAAX,GAA0B;AAD7B,OAAd;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWK,YAAvB;AACC,KA1ByB;AAAA;;AA8B9BQ,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAsB,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWK,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuD,KAAKL,KAAL,CAAWC,KAAX,CAAiB,KAAKD,KAAL,CAAWK,YAA5B,CAAvD,CAFJ,EAII;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wIAJJ,EAKI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCANJ,EAOI;AAAG,MAAA,SAAS,EAAC,gCAAb;AAA8C,MAAA,IAAI,EAAC,YAAnD;AAAgE,MAAA,IAAI,EAAC,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ,EAQI;AAAG,MAAA,SAAS,EAAC,+BAAb;AAA6C,MAAA,IAAI,EAAC,YAAlD;AAA+D,MAAA,IAAI,EAAC,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,CADJ,EAWI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,OAAO,EAAE,KAAKC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,EAYI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,OAAO,EAAE,KAAKC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,CADJ;AAgBH;;AA/C6B;;AAkDlC,eAAeR,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport './style.css'\nimport { thisExpression } from '@babel/types';\n\n\nclass Jumbotron extends Component {\n\n    state = {\n        title: ['The A-List', 'Season Display', 'Image Search'],\n        description: [],\n        appLink: [],\n        ghLink: [],\n        currentIndex: 0\n    }\n\n    goToPrev = () => {\n\n    }\n\n    goToNext = () => {\n        console.log('clicked')\n        for (let i = 0; i < this.state.title.length; i++) {\n            if(this.state.currentIndex < this.state.title.length){\n                this.setState({currentIndex: [0]})\n            }   \n            \n        }\n        this.setState({\n           currentIndex: this.state.currentIndex + 1\n        })\n        console.log(this.state.currentIndex)\n        };\n    \n\n\n    render(){\n        return (\n            <div className='ui container'>\n                <div className=\"jumbotron\" >\n                \n                    <h1 className=\"title\" title={this.state.currentIndex}>{this.state.title[this.state.currentIndex]}</h1>\n            \n                    <p className=\"description\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\n                    <hr className=\"my-4\" />\n                    <p>Check it out for yourself!</p>\n                    <a className=\"btn btn-primary btn-lg appLink\" href=\"github.com\" role=\"button\">Learn more</a>\n                    <a className=\"btn btn-primary btn-lg ghLink\" href=\"github.com\" role=\"button\">Learn more</a>\n                </div>\n                <button type=\"button\" className=\"btn btn-success\" onClick={this.goToPrev}>Previous</button>\n                <button type=\"button\" className=\"btn btn-success\" onClick={this.goToNext}>Next</button>\n            </div>\n        )\n    }\n}\n\nexport default Jumbotron; "]},"metadata":{},"sourceType":"module"}